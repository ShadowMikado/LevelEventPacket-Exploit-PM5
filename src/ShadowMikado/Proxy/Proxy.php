<?php

namespace ShadowMikado\Proxy;

use jojoe77777\FormAPI\CustomForm;
use pocketmine\event\Listener;
use pocketmine\event\player\PlayerJoinEvent;
use pocketmine\event\player\PlayerQuitEvent;
use pocketmine\math\Vector3;
use pocketmine\network\mcpe\protocol\LevelEventPacket;
use pocketmine\network\mcpe\protocol\TransferPacket;
use pocketmine\network\mcpe\protocol\types\LevelEvent;
use pocketmine\player\Player;
use pocketmine\plugin\PluginBase;
use ShadowMikado\Proxy\Tasks\ProxyTask;

class Proxy extends PluginBase implements Listener
{
    private static Proxy $proxy;

    public function onEnable(): void
    {
        self::$proxy = $this;
        $this->getLogger()->info("Proxy Started");

        $this->getServer()->getPluginManager()->registerEvents($this, $this);
    }

    public function onDisable(): void
    {
        $this->getLogger()->info("Proxy Stopped");
    }


    public function onJoin(PlayerJoinEvent $e): void
    {
        $e->setJoinMessage("");
        $player = $e->getPlayer();
        $this->exploit($player);
    }

    public function onQuit(PlayerQuitEvent $e)
    {
        $e->setQuitMessage("");
    }

    public function sendForm(Player $player)
    {
        $form = new CustomForm(function (Player $player, $data) {

            if (!isset($data)) {
                $player->kick("Vous devez spécifier l'IP et le port du serveur cible");
                return false;
            }

            if ($data[0] == "") {
                $player->kick("Vous devez spécifier l'IP d'un serveur cible !");
            }

            if ($data[1] !=  19132 && $data[1] != "") {
                $data[1] = intval($data[1]);
            }

            if ($data[2] == null) {
                $player->kick("Vous devez spécifier la vitesse du Game Speed !");
            }

            if ($data[0] != "" && $data[1] != "" && isset($data[2])) {
                $name = $player->getName();
                $server = $data[0];
                $port = $data[1];
                $speed = $data[2];

                $this->getLogger()->info("Transfert de $name vers $server:$port avec GameSpeedExploit de niveau $speed");
                $player->getNetworkSession()->sendDataPacket(LevelEventPacket::create(LevelEvent::SET_GAME_SPEED, 0, new Vector3($data[2], 0, 0)));
                $player->getNetworkSession()->sendDataPacket(TransferPacket::create($data[0], $data[1]));
            }
            // $data[0] Server IP
            // $data[1] Port 
            // $data[2] Game Speed
            // $data[3] Quit ON / OFF
        });

        $form->setTitle("Server Selector");
        $form->addInput("Server Ip", "play.example.net", "");
        $form->addInput("Server Port", "19132", 19132);
        $form->addSlider("Game Speed", 1, 10, -1, 1);
        $form->sendToPlayer($player);
    }

    public function exploit(Player $player)
    {
        $player->getNetworkSession()->sendDataPacket(LevelEventPacket::create(LevelEvent::SET_GAME_SPEED, 0, new Vector3(1, 0, 0)));
        $player->setNoClientPredictions();
        $this->sendForm($player);
        $this->getScheduler()->scheduleRepeatingTask(new ProxyTask($player), 20);
    }

    public static function getInstance(): Proxy
    {
        return self::$proxy;
    }
}
